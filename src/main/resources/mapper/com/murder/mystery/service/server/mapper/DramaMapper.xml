<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.murder.mystery.service.server.mapper.DramaMapper">
  <resultMap id="BaseResultMap" type="com.murder.mystery.service.server.domain.Drama">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="player_number" jdbcType="INTEGER" property="playerNumber" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="paly_count" jdbcType="INTEGER" property="palyCount" />
    <result column="difficulty_degree" jdbcType="INTEGER" property="difficultyDegree" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.murder.mystery.service.server.domain.Drama">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, `type`, description, score, player_number, head_img, paly_count, difficulty_degree
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.murder.mystery.service.server.domain.DramaExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from drama
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.murder.mystery.service.server.domain.DramaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from drama
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from drama
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from drama
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.murder.mystery.service.server.domain.DramaExample">
    delete from drama
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.murder.mystery.service.server.domain.Drama" useGeneratedKeys="true">
    insert into drama (`name`, `type`, description, 
      score, player_number, head_img, 
      paly_count, difficulty_degree, content
      )
    values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{playerNumber,jdbcType=INTEGER}, #{headImg,jdbcType=VARCHAR}, 
      #{palyCount,jdbcType=INTEGER}, #{difficultyDegree,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.murder.mystery.service.server.domain.Drama" useGeneratedKeys="true">
    insert into drama
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="playerNumber != null">
        player_number,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="palyCount != null">
        paly_count,
      </if>
      <if test="difficultyDegree != null">
        difficulty_degree,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="playerNumber != null">
        #{playerNumber,jdbcType=INTEGER},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="palyCount != null">
        #{palyCount,jdbcType=INTEGER},
      </if>
      <if test="difficultyDegree != null">
        #{difficultyDegree,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.murder.mystery.service.server.domain.DramaExample" resultType="java.lang.Integer">
    select count(*) from drama
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update drama
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.playerNumber != null">
        player_number = #{record.playerNumber,jdbcType=INTEGER},
      </if>
      <if test="record.headImg != null">
        head_img = #{record.headImg,jdbcType=VARCHAR},
      </if>
      <if test="record.palyCount != null">
        paly_count = #{record.palyCount,jdbcType=INTEGER},
      </if>
      <if test="record.difficultyDegree != null">
        difficulty_degree = #{record.difficultyDegree,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update drama
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      player_number = #{record.playerNumber,jdbcType=INTEGER},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      paly_count = #{record.palyCount,jdbcType=INTEGER},
      difficulty_degree = #{record.difficultyDegree,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update drama
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      player_number = #{record.playerNumber,jdbcType=INTEGER},
      head_img = #{record.headImg,jdbcType=VARCHAR},
      paly_count = #{record.palyCount,jdbcType=INTEGER},
      difficulty_degree = #{record.difficultyDegree,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.murder.mystery.service.server.domain.Drama">
    update drama
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="playerNumber != null">
        player_number = #{playerNumber,jdbcType=INTEGER},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="palyCount != null">
        paly_count = #{palyCount,jdbcType=INTEGER},
      </if>
      <if test="difficultyDegree != null">
        difficulty_degree = #{difficultyDegree,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.murder.mystery.service.server.domain.Drama">
    update drama
    set `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      player_number = #{playerNumber,jdbcType=INTEGER},
      head_img = #{headImg,jdbcType=VARCHAR},
      paly_count = #{palyCount,jdbcType=INTEGER},
      difficulty_degree = #{difficultyDegree,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.murder.mystery.service.server.domain.Drama">
    update drama
    set `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      player_number = #{playerNumber,jdbcType=INTEGER},
      head_img = #{headImg,jdbcType=VARCHAR},
      paly_count = #{palyCount,jdbcType=INTEGER},
      difficulty_degree = #{difficultyDegree,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.murder.mystery.service.server.domain.DramaExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from drama
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.murder.mystery.service.server.domain.DramaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from drama
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>