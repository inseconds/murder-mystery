<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.murder.mystery.service.server.mapper.GameUserEvidenceMapper" >
  <resultMap id="BaseResultMap" type="com.murder.mystery.service.server.domain.GameUserEvidence" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="character_evidence_id" property="characterEvidenceId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="checked_user_id" property="checkedUserId" jdbcType="INTEGER" />
    <result column="is_open" property="isOpen" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, character_evidence_id, `status`, checked_user_id, is_open
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.murder.mystery.service.server.domain.GameUserEvidenceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_user_evidence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from game_user_evidence
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from game_user_evidence
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.murder.mystery.service.server.domain.GameUserEvidenceExample" >
    delete from game_user_evidence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.murder.mystery.service.server.domain.GameUserEvidence" useGeneratedKeys="true" keyProperty="id" >
    insert into game_user_evidence (user_id, character_evidence_id, `status`, 
      checked_user_id, is_open)
    values (#{userId,jdbcType=INTEGER}, #{characterEvidenceId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{checkedUserId,jdbcType=INTEGER}, #{isOpen,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.murder.mystery.service.server.domain.GameUserEvidence" useGeneratedKeys="true" keyProperty="id" >
    insert into game_user_evidence
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="characterEvidenceId != null" >
        character_evidence_id,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="checkedUserId != null" >
        checked_user_id,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="characterEvidenceId != null" >
        #{characterEvidenceId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="checkedUserId != null" >
        #{checkedUserId,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.murder.mystery.service.server.domain.GameUserEvidenceExample" resultType="java.lang.Integer" >
    select count(*) from game_user_evidence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update game_user_evidence
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.characterEvidenceId != null" >
        character_evidence_id = #{record.characterEvidenceId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.checkedUserId != null" >
        checked_user_id = #{record.checkedUserId,jdbcType=INTEGER},
      </if>
      <if test="record.isOpen != null" >
        is_open = #{record.isOpen,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update game_user_evidence
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      character_evidence_id = #{record.characterEvidenceId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      checked_user_id = #{record.checkedUserId,jdbcType=INTEGER},
      is_open = #{record.isOpen,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.murder.mystery.service.server.domain.GameUserEvidence" >
    update game_user_evidence
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="characterEvidenceId != null" >
        character_evidence_id = #{characterEvidenceId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="checkedUserId != null" >
        checked_user_id = #{checkedUserId,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null" >
        is_open = #{isOpen,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.murder.mystery.service.server.domain.GameUserEvidence" >
    update game_user_evidence
    set user_id = #{userId,jdbcType=INTEGER},
      character_evidence_id = #{characterEvidenceId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      checked_user_id = #{checkedUserId,jdbcType=INTEGER},
      is_open = #{isOpen,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.murder.mystery.service.server.domain.GameUserEvidenceExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_user_evidence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>